{
    "title": "Fluent Python, 2nd ed. (2022)",
    "nb_pages": 961,
    "id": "FluentPython",
    "front_cover": "https://m.media-amazon.com/images/I/81OvszBEdhL._AC_UF200,200_QL80_.jpg",
    "tags": [{
        "text": "incomplete",
        "bgColor": "yellow",
        "textColor": "red"
    }],
    "authors": "Luciano Ramalho",
    "content": [{
        "title": "Part I - Data Structures",
        "content": [{
            "id": "1",
            "title": "1. The Python Data Model",
            "start_page": 3,
            "content": [{
                "id": "1.1",
                "title": "What's New in This Chapter",
                "start_page": 4
            },{
                "id": "1.2",
                "title": "A Pythonic Card Deck",
                "start_page": 5
            },{
                "id": "1.3",
                "title": "How Special Methods Are Used",
                "start_page": 8,
                "content": [{
                    "id": "1.3.1",
                    "title": "Emulating Numeric Types",
                    "start_page": 9
                },{
                    "id": "1.3.2",
                    "title": "String Representation",
                    "start_page": 12
                },{
                    "id": "1.3.3",
                    "title": "Boolean Value of a Custom Type",
                    "start_page": 13
                },{
                    "id": "1.3.4",
                    "title": "Collection API",
                    "start_page": 14
                }]
            },{
                "id": "1.4",
                "title": "Overview of Special Methods",
                "start_page": 15
            },{
                "id": "1.5",
                "title": "Why Len Is Not a Method",
                "start_page": 17
            },{
                "id": "1.6",
                "title": "Chapter Summary",
                "start_page": 18
            },{
                "id": "1.7",
                "title": "Further Reading",
                "start_page": 18
            }]
        },{
            "id": "2",
            "title": "2. An Array of Sequences",
            "start_page": 21
        },{
            "id": "3",
            "title": "3. Dictionaries and Sets",
            "start_page": 77
        },{
            "id": "4",
            "title": "4. Unicode Text Versus Bytes",
            "start_page": 117
        },{
            "id": "5",
            "title": "5. Data Class Builders",
            "start_page": 163
        },{
            "id": "6",
            "title": "6. Object References, Mutability, and Recycling",
            "start_page": 201
        }]
    },{
        "title": "Part II - Functions as Objects",
        "content": [{
            "id": "7",
            "title": "7. Functions as First-Class Objects",
            "start_page": 231
        },{
            "id": "8",
            "title": "8. Type Hints in Functions",
            "start_page": 253
        },{
            "id": "9",
            "title": "9. Decorators and Closures",
            "start_page": 303
        },{
            "id": "10",
            "title": "10. Design Patterns with First-Class Functions",
            "start_page": 341
        }]
    },{
        "title": "Part III - Classes and Protocols",
        "content": [{
            "id": "11",
            "title": "11. A Pythonic Object",
            "start_page": 363
        },{
            "id": "12",
            "title": "12. Special Methods for Sequences",
            "start_page": 397
        },{
            "id": "13",
            "title": "13. Interfaces, Protocols, and ABCs",
            "start_page": 431
        },{
            "id": "14",
            "title": "14. Inheritance: For Better or for Worse",
            "start_page": 487
        },{
            "id": "15",
            "title": "15. More About Type Hints",
            "start_page": 519
        },{
            "id": "16",
            "title": "16. Operator Overloading",
            "start_page": 561
        }]
    },{
        "title": "Part IV - Control Flow",
        "content": [{
            "id": "17",
            "title": "17. Iterators, Generators, and Classic Coroutines",
            "start_page": 593
        },{
            "id": "18",
            "title": "18. with, match, and else Blocks",
            "start_page": 657
        },{
            "id": "19",
            "title": "19. Concurrency Models in Python",
            "start_page": 695
        },{
            "id": "20",
            "title": "20. Concurrent Executors",
            "start_page": 743
        },{
            "id": "21",
            "title": "21. Asynchronous Programming",
            "start_page": 775
        }]
    },{
        "title": "Part V - Metaprogramming",
        "content": [{
            "id": "22",
            "title": "22. Dynamic Attributes and Properties",
            "start_page": 835
        },{
            "id": "23",
            "title": "23. Attribute Descriptors",
            "start_page": 879
        },{
            "id": "24",
            "title": "24. Class Metaprogramming",
            "start_page": 907
        }]
    }]
}